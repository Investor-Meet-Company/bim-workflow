name: 2. Deploy to Cluster
on:
  workflow_call:
    secrets:
      KUBECONFIG:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
    inputs:
      AWS_REGION:
        type: string
        required: true
      image-tag:
        type: string
        required: true
      deploy-reference:
        type: string
        required: true
      namespace:
        type: string
        required: true
      registry:
        type: string
        required: true
      chart:
        type: string
        required: true
      domain:
        type: string
        required: true
      runs-on:
        type: string
        required: false
        default: ubuntu-latests

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to Kube
    runs-on: ${{ inputs.runs-on }}
    environment: production

    steps:
      - name: Set up Helm
        uses: azure/setup-helm@v2.1
        with:
          version: v3.8.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}
          mask-aws-account-id: 'no'

      - name: Setup EKS
        run: |
          sudo apt install kubectl=1.23.6-00
          aws eks --region ${{ inputs.AWS_REGION }} update-kubeconfig --name bb-qa-cluster --role-arn arn:aws:iam::120324228563:role/eksClusterRole
          

      - name: Deliverybot Helm Action
        run: |
          kubectl get pods
          helm version
          helm repo add bim-charts https://investor-meet-company.github.io/bim-charts
          helm upgrade --install ${{ inputs.namespace }}-${{ inputs.deploy-reference }} --set ingress.host=${{ inputs.deploy-reference }}.${{ inputs.domain }} --set image.registry=${{ inputs.registry }} --set image.repository=${{ inputs.namespace }} --set image.tag=${{ inputs.image-tag }} ${{ inputs.chart }}

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.19.0
        with:
          channel-id: 'C011YADU2V8' #deploy-notifications
          slack-message: "GitHub build result built"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

#      - name: Deliverybot Helm Action
#        uses: peymanmortazavi/eks-helm-deploy@v2.1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS__KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ inputs.AWS_REGION }}
#          cluster-name: bb-qa-cluster
#          namespace: default
##          values: |
##            ingress.host: ${{ inputs.deploy-reference }}.${{ inputs.domain }}
##            image.registry: ${{ inputs.registry }}
##            image.repository: ${{ inputs.namespace }}
##            image.tag: ${{ inputs.image-tag }}
#          name: ${{ inputs.namespace }}/${{ inputs.deploy-reference }}
#          chart-path: --repo https://investor-meet-company.github.io/bim-charts  ${{ inputs.chart }}

#      - name: Test Deploy
#        run : echo "Deploye Reference ${{ inputs.deploy-reference }} - ${{ inputs.image-tag }}"
#
#      - uses: actions/checkout@v1
#      - name: List Helm
#        uses: freexe/github-action-helm3@feature/aws
#        with:
#          exec: helm version && helm repo add bim-charts https://investor-meet-company.github.io/bim-charts
#          kubeconfig: '${{ secrets.KUBECONFIG }}'
#
#      - uses: actions/checkout@v1
#      - name: Run Helm
#        uses: freexe/github-action-helm3@feature/aws
#        with:
#          exec: |
#                  helm upgrade --install \
#                        ${{ inputs.namespace }}/${{ inputs.deploy-reference }} \
#                        --set ingress.host=${{ inputs.deploy-reference }}.${{ inputs.domain }} \
#                        --set image.registry=${{ inputs.registry }} \
#                        --set image.repository=${{ inputs.namespace }} \
#                        --set image.tag=${{ inputs.image-tag }} \
#                        ${{ inputs.chart }}
#          kubeconfig: '${{ secrets.KUBECONFIG }}'



